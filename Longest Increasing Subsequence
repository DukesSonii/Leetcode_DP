class Solution {
    public int lengthOfLIS(int[] arr1) {
       HashSet<Integer> set = new HashSet<>();
        for(int i=0;i<arr1.length;i++){
            set.add(arr1[i]);    //ek ek krek elements set mai dal jayanga
        }
        //set.size
        int arr2[] = new int[set.size()];
        int i=0;
        for(int num:set){   //set ke andar se ek ek krke no. bahar niklange 
            arr2[i] = num;  //or usko arr2 mai store kra dia 
            i++;
        }
        Arrays.sort(arr2);  //in ascending order
        return lcsmod(arr1,arr2);
    }
    public static int lcsmod(int arr1[], int arr2[]){ 
        
        int n = arr1.length;
        int m = arr2.length;
        
        int dp[][] = new int[n+1][m+1];
        
        for(int i=0;i<n+1;i++){
            for(int j=0;j<m+1;j++){
                dp[i][0]=0;
            }
        }
        for(int i=0;i<n+1;i++){
            for(int j=0;j<m+1;j++){
                dp[0][j]=0;
            }
        }
        
        for(int i=1;i<n+1;i++){
            for(int j=1;j<m+1;j++){
                if(arr1[i-1] == arr2[j-1]) {
                    dp[i][j] = dp[i-1][j-1] + 1;
                }    
                else
                {
                    int ans1 = dp[i-1][j];
                    int ans2 = dp[i][j-1];
                    dp[i][j] = Math.max(ans1,ans2);
                }
            }
        }
        return dp[n][m];
    }
}
